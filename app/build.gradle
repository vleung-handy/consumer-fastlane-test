import org.gradle.logging.StyledTextOutputFactory
import static org.gradle.logging.StyledTextOutput.Style

buildscript {
    repositories {
        flatDir {
            dirs 'libs'
            dirs 'aars'
        }
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.newrelic.agent.android:agent-gradle-plugin:5.3.2'
        classpath 'io.fabric.tools:gradle:1.19.2'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.2.1'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "http://dl.bintray.com/populov/maven" }
    maven { url "http://dl.bintray.com/urbanairship/android" }
    flatDir {
        dirs 'libs'
        dirs 'aars'
    }
    mavenCentral()
}

apply plugin: 'com.android.application'
// This does not break the build when Android Studio is missing the JRebel for Android plugin.
apply plugin: 'com.zeroturnaround.jrebel.android'
apply plugin: 'io.fabric'
apply plugin: 'newrelic'
apply plugin: 'com.getkeepsafe.dexcount'

dexcount {
    includeClasses = false
    includeFieldCount = false
    printAsTree = false
    orderByMethodCount = false
    verbose = false
}

def computeVersionCode(versionName) {
    def versionNameMatcher = (versionName =~ /^([1-9]\d*)\.(\d{1,2})\.(\d{1,2})$/)
    if (versionNameMatcher.matches()) {
        def identifiers = (versionNameMatcher[0] - [versionName])
        def (major, minor, patch) = identifiers.collect { it.toInteger() }
        def versionCode = (major * 1000000) + (minor * 10000) + (patch * 100)

        def out = services.get(StyledTextOutputFactory).create("debug")
        out.withStyle(Style.Info).println("\nBuilding version ${versionName} (${versionCode})\n")
        return versionCode
    } else {
        throw new InvalidUserDataException("Illegal version name ${versionName}")
    }
}

android {
    signingConfigs {
        stage {
            keyAlias 'HandyStageKey'
            keyPassword 'S0H@ndy!'
            storeFile file('handy-stage-key.keystore')
            storePassword 'S0H@ndy!'
        }
        prod {
            keyAlias 'HandyProdKey'
            keyPassword 'S0H@ndy!'
            storeFile file('handy-prod-key.keystore')
            storePassword 'S0H@ndy!'
        }
    }
    compileSdkVersion 22
    buildToolsVersion '22.0.1'
    defaultConfig {
        applicationId 'com.handy.handy'
        minSdkVersion 15
        targetSdkVersion 22
        versionName '1.11.3'
        versionCode computeVersionCode(versionName)
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        stage {
            applicationId 'com.handy.handy.stage'
            signingConfig signingConfigs.stage
            manifestPlaceholders = [PACKAGE_NAME: "com.handy.handy.stage"]
        }
        prod {
            applicationId 'com.handy.handy.prod'
            signingConfig signingConfigs.prod
            manifestPlaceholders = [PACKAGE_NAME: "com.handy.handy.prod"]
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def buildInfo = "${flavorName}-${variant.buildType.name}"
                def versionInfo = "${variant.versionName}-${variant.versionCode}"
                output.outputFile = new File(output.outputFile.parentFile,
                        "handy-${buildInfo}-${versionInfo}.apk");
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //Android Support Libraries
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.android.support:support-v4:22.2.0'
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:cardview-v7:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'
    compile 'com.android.support:design:22.2.0'
    compile 'com.android.support:support-annotations:22.2.0'

    //fix missing nullable annotations warnings
    compile 'com.google.code.findbugs:jsr305:2.0.2'

    //Crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }

    //New Relic
    compile 'com.newrelic.agent.android:android-agent:5.3.2'

    //Awesome Square Libraries
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.3.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton:butterknife:7.0.1'
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'

    //Stripe payment processing
    compile 'com.stripe:stripe-android:1.0.0.1'

    //Menu drawer for navigation
    compile 'net.simonvt.menudrawer:menudrawer:3.0.6'

    //Calligraphy for fonts
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'

    // Urban Airship for cloud messaging
    compile 'com.urbanairship.android:urbanairship-sdk:6.3.1'

    //Guava
    compile 'com.google.guava:guava:18.0'

    //SecurePrefs storage
    compile 'com.scottyab:secure-preferences-lib:0.1.1'

    //Facebook (just for login)
    compile 'com.facebook.android:facebook-android-sdk:4.1.0'

    //Mixpanel
    compile 'com.mixpanel.android:mixpanel-android:4.6.3'

    //STILL NEEDED? - Netflix RX Java : https://github.com/ReactiveX/RxJava/wiki : Reactive library,
    // to investigate for adoption or removal
    compile 'com.netflix.rxjava:rxjava-android:0.18.4' //TODO: Update to RxAndroid

    //STILL NEEDED? - reactive location : https://github.com/mcharmas/Android-ReactiveLocation
    // : RxJava wrapper for google play services
    compile 'pl.charmas.android:android-reactive-location:0.2@aar' //TODO: Update after RxJava updtd

    //This is for a view page indicator : http://viewpagerindicator.com/ : We are not using that but
    // we do have some style / theme dependencies, to remove in future
    compile 'com.viewpagerindicator:library:2.4.1'

    compile files('../libs/yozio-android-sdk.jar')
    compile project(':simplealertdialog')
    compile project(':androidspinner')

    //Espresso libraries for automation testing
    androidTestCompile ('com.android.support.test:runner:0.4.1') {
        exclude module: 'support-annotations'
    }
    androidTestCompile ('com.android.support.test.espresso:espresso-core:2.2.1') {
        exclude module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }
    //need to exclude certain modules because they cause dependency conflicts

    //Android Pay
    compile 'com.google.android.gms:play-services-basement:8.4.8.7@aar'
    compile 'com.google.android.gms:play-services-base:8.4.8.7@aar'
    compile 'com.google.android.gms:play-services-identity:8.4.8.7@aar'
    compile 'com.google.android.gms:play-services-wallet:8.4.8.7@aar'

    //Location
    compile 'com.google.android.gms:play-services-location:8.4.8.7@aar'

    //Testing with junit and robolectric
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.robolectric:shadows-support-v4:3.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.robolectric:shadows-multidex:3.0'
}
